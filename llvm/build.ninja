build $llvm: git
  url = --branch release/10.x https://github.com/llvm/llvm-project
  destination = $llvm

build $llvm/llvm: phony $llvm

build build-host-$llvm/Makefile: cmake $llvm/llvm
  opts = -DCMAKE_C_COMPILER=clang $
    -DCMAKE_CXX_COMPILER=clang++ $
    -DLLVM_CCACHE_BUILD=$llvm_ccache_build $
    -DLLVM_ENABLE_PROJECTS='clang'

build build-host-$llvm/bin/clang-tblgen build-host-$llvm/bin/llvm-tblgen: make build-host-$llvm/Makefile
  prefix = DESTDIR=$sysroot
  target = llvm-tblgen clang-tblgen

build llvm-tblgen: phony build-host-$llvm/bin/llvm-tblgen
build clang-tblgen: phony build-host-$llvm/bin/clang-tblgen

build build-libcxx-$llvm/Makefile: cmake $llvm/llvm | make out-$linux/include/linux/version.h $sysroot/lib/libc.so
  opts = -DCMAKE_INSTALL_PREFIX='' $
    -DCMAKE_BUILD_TYPE=MinSizeRel $
    -DCMAKE_C_COMPILER=clang $
    -DCMAKE_C_FLAGS="$cflags -I$$PWD/out-$linux/include" $
    -DCMAKE_CXX_COMPILER=clang++ $
    -DCMAKE_CXX_FLAGS="$cflags -I$$PWD/out-$linux/include" $
    -DCMAKE_EXE_LINKER_FLAGS="-rtlib=compiler-rt" $
    -DCMAKE_SHARED_LINKER_FLAGS="-rtlib=compiler-rt" $
    -DLLVM_CCACHE_BUILD=$llvm_ccache_build $
    -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-musl $
    -DLLVM_TARGET_ARCH=X86 $
    -DLLVM_TARGETS_TO_BUILD=X86 $
    -DLLVM_ENABLE_ASSERTIONS=ON $
    -DLLVM_ENABLE_EH=ON $
    -DLLVM_ENABLE_LIBEDIT=OFF $
    -DLLVM_ENABLE_LIBXML2=OFF $
    -DLLVM_ENABLE_LLD=ON $
    -DLLVM_ENABLE_RTTI=ON $
    -DLLVM_ENABLE_ZLIB=OFF $
    -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON $
    -DLLVM_INSTALL_CCTOOLS_SYMLINKS=ON $
    -DLLVM_ENABLE_PROJECTS='libunwind;libcxxabi;libcxx;compiler-rt;clang' $
    -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON $
    -DCOMPILER_RT_BUILD_LIBFUZZER=OFF $
    -DCOMPILER_RT_BUILD_SANITIZERS=OFF $
    -DCOMPILER_RT_BUILD_XRAY=OFF $
    -DLIBUNWIND_USE_COMPILER_RT=ON $
    -DLIBUNWIND_SYSROOT=$sysroot $
    -DLIBUNWIND_TARGET_TRIPLE=x86_64-unknown-linux-musl $
    -DLIBCXXABI_USE_COMPILER_RT=ON $
    -DLIBCXXABI_USE_LLVM_UNWINDER=ON $
    -DLIBCXXABI_SYSROOT=$sysroot $
    -DLIBCXXABI_TARGET_TRIPLE=x86_64-unknown-linux-musl $
    -DLIBCXX_USE_COMPILER_RT=ON $
    -DLIBCXX_HAS_MUSL_LIBC=ON $
    -DLIBCXX_SYSROOT=$sysroot $
    -DLIBCXX_TARGET_TRIPLE=x86_64-unknown-linux-musl

build $sysroot/lib/libc++.so: make build-libcxx-$llvm/Makefile
  prefix = DESTDIR=$sysroot
  target = install-compiler-rt install-unwind install-libcxxabi install-libcxx
  pool = console

#    -DLLVM_BUILD_STATIC=ON $
build build-clang-$llvm/Makefile: cmake $llvm/llvm  | make out-$linux/include/linux/version.h clang-tblgen llvm-tblgen $sysroot/lib/libc.so $sysroot/lib/libc++.so
  opts = -DCMAKE_INSTALL_PREFIX='' $
    -DCMAKE_BUILD_TYPE=MinSizeRel $
    -DCMAKE_C_COMPILER=clang $
    -DCMAKE_C_FLAGS="--sysroot=$sysroot $cflags -I$$PWD/out-$linux/include" $
    -DCMAKE_CXX_COMPILER=clang++ $
    -DCMAKE_CXX_FLAGS="--sysroot=$sysroot -stdlib=libc++ $cflags -I$sysroot/include/c++/v1 -I$$PWD/out-$linux/include" $
    -DCMAKE_EXE_LINKER_FLAGS="-rtlib=compiler-rt -w -s -lunwind -lc++abi" $
    -DCMAKE_SHARED_LINKER_FLAGS="-rtlib=compiler-rt" $
    -DLLVM_CCACHE_BUILD=$llvm_ccache_build $
    -DLLVM_TABLEGEN=$llvm-tblgen $
    -DLLVM_BUILD_STATIC=ON $
    -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-musl $
    -DLLVM_TARGET_ARCH=X86 $
    -DLLVM_TARGETS_TO_BUILD=X86 $
    -DLLVM_ENABLE_ASSERTIONS=ON $
    -DLLVM_ENABLE_EH=ON $
    -DLLVM_ENABLE_LIBEDIT=OFF $
    -DLLVM_ENABLE_LIBXML2=OFF $
    -DLLVM_ENABLE_LLD=ON $
    -DLLVM_ENABLE_RTTI=ON $
    -DLLVM_ENABLE_ZLIB=OFF $
    -DLLVM_INCLUDE_TESTS=OFF $
    -DLLVM_INCLUDE_BENCHMARKS=OFF $
    -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON $
    -DLLVM_INSTALL_CCTOOLS_SYMLINKS=ON $
    -DLLVM_ENABLE_PROJECTS='clang;lld;llvm' $
    -DCLANG_TABLEGEN=$clang-tblgen $
    -DCLANG_DEFAULT_LINKER=lld $
    -DCLANG_DEFAULT_RTLIB=compiler-rt $
    -DCLANG_DEFAULT_CXX_STDLIB=libc++

build $sysroot/bin/clang: make build-clang-$llvm/Makefile
  prefix = DESTDIR=$sysroot
  target = install-clang-resource-headers $
    install-clang-stripped $
    install-ar-stripped $
    install-ranlib-stripped $
    install-lld-stripped $
    install-nm-stripped $
    install-objcopy-stripped $
    install-strip-stripped $
    install-objdump-stripped $
    install-readelf-stripped $
    install-size-stripped $
    install-strings-stripped
  pool = console

build libcxx: phony $sysroot/lib/libc++.so
build clang: phony $sysroot/bin/clang
