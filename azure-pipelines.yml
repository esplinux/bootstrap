# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

jobs:
- job: Bootstrap
  timeoutInMinutes: 0
  container: fedora:31
  options: --privileged

  # Install build tools, podman and buildah
  # Configure libpod to use vfs storage so it works in a container
  #    sudo sed -i 's/driver = "overlay"/driver = "vfs"/' /etc/containers/storage.conf
  steps:
  - script: |
      sudo dnf -y install git clang lld cmake make ninja-build podman buildah rsync findutils diffutils
    displayName: 'Install Prerequisites'

  - script: TERM=dumb ninja musl toybox dash bash
    displayName: 'Build Base [Musl, Toybox, Dash, Bash]'

  - script: |
      CONTAINER_NAME="esplinux/bootstrap-base" scripts/buildcontainer.sh musl toybox dash
      podman login -u $(docker-user) -p $(docker-pass) docker.io
      podman push esplinux/bootstrap-base docker://docker.io/esplinux/bootstrap-base
      podman logout docker.io
    displayName: 'Podman Bootstrap Base'

  - script: TERM=dumb ninja libcxx
    displayName: 'Build LibCXX'

  - script: TERM=dumb ninja lld
    displayName: 'Build LLD'

  - script: TERM=dumb ninja clang
    displayName: 'Build Clang'

  - script: |
      CONTAINER_NAME="esplinux/bootstrap" scripts/buildcontainer.sh musl toybox dash libcxx lld clang
      podman login -u $(docker-user) -p $(docker-pass) docker.io
      podman push esplinux/bootstrap docker://docker.io/esplinux/bootstrap
      podman logout docker.io
    displayName: 'Podman Bootstrap'

  - script: TERM=dumb ninja nodejs
    displayName: 'Build NodeJS'

  - script: |
      CONTAINER_NAME="esplinux/bootstrap-azurepipeline" scripts/buildcontainer.sh musl toybox dash libcxx lld clang bash nodejs
      podman login -u $(docker-user) -p $(docker-pass) docker.io
      podman push esplinux/bootstrap-azurepipeline docker://docker.io/esplinux/bootstrap-azurepipeline
      podman logout docker.io
    displayName: 'Podman Bootstrap Azure Pipeline'

  # GitHub Release
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'github.com_emolitor'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      tagSource: 'manual' # Required when action == Create# Options: auto, manual
      tag: 'Bootstrap' # Required when action == Edit || Action == Delete || TagSource == Manual
      assets: '*.tgz' #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
      assetUploadMode: 'delete' # Optional. Options: delete, replace
      isPreRelease: true # Optional
    displayName: 'Github Release'
