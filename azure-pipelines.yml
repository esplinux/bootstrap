# Build bootrsap container used for scratch builds of ESPLinux

trigger:
- master

schedules:
- cron: "0 0 * * *"
  displayName: Daily build
  branches:
    include:
    - master
  always: true

pool:
  vmImage: 'ubuntu-18.04'

# Hack if XDG_RUNTIME_DIR is not set rootless buildah wll fail
# Force VFS Mode as we are already on an OverlayFS
variables:
  AZURE_CACHE_REVISION: 0
  CCACHE_DIR: $(Pipeline.Workspace)/ccache
  CCACHE_COMPILERCHECK: content

jobs:
- job: Bootstrap
  timeoutInMinutes: 0
  container:
    image: quay.io/buildah/stable
    options: --privileged --cap-add SYS_ADMIN --device /dev/fuse -v /var/lib/containers:/var/lib/containers

  steps:
  - script: |
      sudo dnf clean all
      sudo dnf -y install --refresh git llvm clang lld cmake make ninja-build findutils rsync glibc-static python2.7 python which ccache
    displayName: 'Install Prerequisites and configure container storage'

  - bash:
      echo "##vso[task.setvariable variable=WEEKLY_CACHE_KEY]$(date +%Y-%V)"
    displayName: 'Calculate Cache Keys'

  - task: Cache@2
    inputs:
      key: 'ccache | $(AZURE_CACHE_REVISION) | $(WEEKLY_CACHE_KEY)'
      path: $(CCACHE_DIR)
    displayName: 'CCache'

  - script: ./configure.sh
    displayName: 'Configure'

  - script: TERM=dumb ninja fetch_sources
    displayName: 'Fetch Sources'

  - script: TERM=dumb ninja musl
    displayName: 'Build MUSL'

  - script: TERM=dumb ninja clang
    displayName: 'Build Clang'

  - script: TERM=dumb ninja toybox dash curl
    displayName: 'Build Base [Toybox, Dash, Curl]'

  - script: |
      sudo buildah --name bootstrap from scratch
      mnt=$(sudo buildah mount bootstrap)
      sudo tar -C $mnt -xf musl-*.tgz
      sudo tar -C $mnt -xf clang-*.tgz
      sudo tar -C $mnt -xf toybox-*.tgz
      sudo tar -C $mnt -xf dash-*.tgz
      sudo tar -C $mnt -xf curl-*.tgz
      sudo buildah unmount bootstrap
      sudo buildah config --cmd sh bootstrap
      sudo buildah commit --squash bootstrap esplinux/bootstrap
      sudo buildah images
      sudo buildah login -u $(docker-user) -p $(docker-pass) docker.io
      sudo buildah push -f docker esplinux/bootstrap docker://docker.io/esplinux/bootstrap
      sudo buildah logout docker.io
    displayName: 'Podman Bootstrap'

  - script: TERM=dumb ninja bash node
    displayName: 'Build Azure Deps [Bash Node]'

  - script: |
      sudo buildah --name bootstrap-azurepipeline from scratch
      mnt=$(sudo buildah mount bootstrap-azurepipeline)
      sudo tar -C $mnt -xf musl-*.tgz
      sudo tar -C $mnt -xf clang-*.tgz
      sudo tar -C $mnt -xf toybox-*.tgz
      sudo tar -C $mnt -xf dash-*.tgz
      sudo tar -C $mnt -xf curl-*.tgz
      sudo tar -C $mnt -xf bash-*.tgz
      sudo tar -C $mnt -xf node-*.tgz
      sudo buildah unmount bootstrap-azurepipeline
      sudo buildah config --cmd sh bootstrap-azurepipeline
      sudo buildah commit --squash bootstrap-azurepipeline esplinux/bootstrap-azurepipeline
      sudo buildah images
      sudo buildah login -u $(docker-user) -p $(docker-pass) docker.io
      sudo buildah push -f docker esplinux/bootstrap-azurepipeline docker://docker.io/esplinux/bootstrap-azurepipeline
      sudo buildah logout docker.io
    displayName: 'Podman Bootstrap Azure Pipeline'

  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'github.com_emolitor'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      tagSource: 'manual' # Required when action == Create# Options: auto, manual
      tag: 'Bootstrap' # Required when action == Edit || Action == Delete || TagSource == Manual
      assets: '*.tgz' #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
      assetUploadMode: 'delete' # Optional. Options: delete, replace
      isPreRelease: true # Optional
    displayName: 'Github Release'
